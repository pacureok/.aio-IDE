<meta>
project_name = "VS_Community_2022_Demo",
version = "1.0.0",
author = "Aio VS Generator",
output_dir = "vs_solution", # Directorio de salida para toda la solución de VS
description = "Comprehensive Aio project demonstrating a multi-project Visual Studio 2022 solution."
</meta>

<crea>
# Crear directorio principal de la solución
$crea=file Name="vs_solution" %Not_extencion,

# Estos directorios de proyecto serán creados automáticamente por os.makedirs cuando se guarden los .csproj y .cs
# Los comentamos aquí para evitar redundancia y posibles FileExistsError
# $crea=file Name="vs_solution/ApiProject" %Not_extencion,
# $crea=file Name="vs_solution/DesktopApp" %Not_extencion,
# $crea=file Name="vs_solution/BusinessLogic" %Not_extencion,
# $crea=file Name="vs_solution/TestsProject" %Not_extencion,

# Crear subdirectorios específicos dentro de los proyectos
$crea=file Name="vs_solution/ApiProject/Controllers" %Not_extencion,
$crea=file Name="vs_solution/DesktopApp/Views" %Not_extencion,
$crea=file Name="vs_solution/DesktopApp/ViewModels" %Not_extencion,
$crea=file Name="vs_solution/BusinessLogic/Models" %Not_extencion,
$crea=file Name="vs_solution/TestsProject/UnitTests" %Not_extencion,
$crea=file Name="vs_solution/BusinessLogic/RustCalculations/src" %Not_extencion,
$crea=file Name="vs_solution/ApiProject/GoLogger" %Not_extencion,
$crea=file Name="vs_solution/SqlDatabase/Migrations" %Not_extencion,


# Crear archivos de ejemplo de assets/recursos dentro de la solución
$crea=file Name="vs_solution/SharedAssets/icon" %extencion .ico,
$crea=file Name="vs_solution/SharedAssets/config" %extencion .json
</crea>

<video>
    <h1>Aio Visual Studio 2022 Solution Demo</h1>
    <p>Esta página web es solo para demostración. El verdadero proyecto de VS se encuentra en la carpeta `vs_solution/`.</p>
    <p>Abre el archivo `vs_solution/VS_Community_2022_Demo.sln` en Visual Studio 2022 para ver la solución completa.</p>
</video>

<cs>
body {
    font-family: 'Segoe UI', sans-serif;
    background-color: #1b2838; /* Color oscuro similar a VS */
    color: #c7d2e0;
    text-align: center;
    padding: 50px;
}
h1 {
    color: #007acc; /* Azul de Visual Studio */
}
p {
    font-size: 1.1em;
}
</cs>

<tp>
console.log("Aio generated web page for VS Solution Demo.");
</tp>

(esp)
# Lógica de despliegue para el entorno de VS
$creafuntion "configurar_entorno_vs" &intert 
(
    debug_mode = "verdadero",
    platform = "Any_CPU"
),
@decte (evento="construccion_exitosa_vs" of accion "configurar_entorno_vs"=run log_message "Solución de VS construida con éxito."),
(/esp)

<ING>
# Build pipeline logic for VS solution
$create_function "configure_vs_build" &insert 
(
    configuration = "Debug",
    target_framework = "net8.0"
),
@detect (event="build_success" of action "configure_vs_build"=run log_message "VS solution build succeeded."),
</ING>

(pat)
# Patrón de construcción de solución VS
$task "Build_VS_Solution",
    log_message "Iniciando construcción de solución de Visual Studio...",
    run_logic_from_esp { $creafuntion "limpiar_proyectos_vs" &intert () },
    run_logic_from_net { $creafuntion "ejecutar_msbuild" &intert (solution_file="VS_Community_2022_Demo.sln", configuration="Release") },
    log_message "Construcción de VS completada.",
    end_task,
(/pat)

<net>
// C# Code for an ASP.NET Core Web API Controller
// File: ApiProject/Controllers/ValuesController.cs
using Microsoft.AspNetCore.Mvc;
using BusinessLogic.Models; // Referencia al proyecto BusinessLogic

namespace ApiProject.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class ValuesController : ControllerBase
    {
        // GET api/values
        [HttpGet]
        public ActionResult<IEnumerable<string>> Get()
        {
            var user = new User { Id = 1, Name = "AioUser" };
            return new string[] { "value1", "value2", user.Name };
        }
    }
}
// C# Code for a Business Logic Model
// File: BusinessLogic/Models/User.cs
namespace BusinessLogic.Models
{
    public class User
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
}
// C# Code for a Desktop App Main Window Code-behind
// File: DesktopApp/MainWindow.xaml.cs
using System.Windows;
using BusinessLogic.Models; // Referencia al proyecto BusinessLogic

namespace DesktopApp
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            var user = new User { Id = 2, Name = "DesktopUser" };
            MessageBox.Show($"Hola desde la aplicación de escritorio Aio! Usuario: {user.Name}");
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            statusTextBlock.Text = "Botón presionado en Desktop App!";
        }
    }
}
// C# Code for a Unit Test Example
// File: TestsProject/UnitTests/MathTests.cs
using Xunit; // Requiere Xunit Nuget package
// using BusinessLogic.Calculations; // Asumiendo que esta clase existe

namespace TestsProject.UnitTests
{
    public class MathTests
    {
        [Fact]
        public void Add_ReturnsCorrectSum()
        {
            // var result = Calculator.Add(2, 3); // Imagina una clase Calculator en BusinessLogic
            // Assert.Equal(5, result);
            Assert.True(true); // Placeholder for actual test
        }
    }
}
</net>

<lua>
-- Lua script for build automation tasks or pre/post-build steps
-- File: ApiProject/config.lua
print("Lua: Ejecutando script de automatización de compilación para VS.")
-- Simulate checking build environment variables
if os.getenv("CONFIGURATION") == "Debug" then
    print("Lua: Modo depuración detectado.")
else
    print("Lua: Modo release detectado.")
end
</lua>

<rs>
// Rust Library for High-Performance Calculations
// File: BusinessLogic/RustCalculations/src/lib.rs
// Note: Integrating Rust into .NET requires FFI (Foreign Function Interface) setup
#[no_mangle]
pub extern "C" fn multiply_numbers(a: i32, b: i32) -> i32 {
    a * b
}
// Example of a small main.rs if it were a standalone Rust app for testing
// File: BusinessLogic/RustCalculations/src/main.rs
/*
fn main() {
    println!("Rust test app running. 5 * 3 = {}", multiply_numbers(5, 3));
}
*/
</rs>

<go>
// Go Microservice for logging or auxiliary tasks
// File: ApiProject/GoLogger/main.go
package main

import (
	"fmt"
	"time"
)

func LogActivity(activity string) {
	fmt.Printf("[%s] Activity Logged: %s\n", time.Now().Format(time.RFC3339), activity)
}

func main() {
	fmt.Println("Go Logger Microservice started.")
	LogActivity("Application initialized.")
}
</go>

<sql>
-- SQL Database Migration Script
-- File: SqlDatabase/Migrations/001_InitialSchema.sql
CREATE TABLE IF NOT EXISTS AppSettings (
    Key TEXT PRIMARY KEY,
    Value TEXT
);

INSERT INTO AppSettings (Key, Value) VALUES ('DatabaseVersion', '1.0');
INSERT INTO AppSettings (Key, Value) VALUES ('FeatureToggleA', 'true');
</sql>

<sln>
# Solución de Visual Studio para una estructura de proyectos completa
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.0.31903.59
MinimumVisualStudioVersion = 10.0.40219.1

# Proyecto de API Web ASP.NET Core
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ApiProject", "ApiProject\ApiProject.csproj", "{B8F3D1C2-D4E5-4A9B-8C7D-0A1B2C3D4E5F}"
EndProject

# Proyecto de Aplicación de Escritorio WPF
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "DesktopApp", "DesktopApp\DesktopApp.csproj", "{C9A2E0B1-F3D4-4E8A-9B7C-1D2E3F4A5B6C}"
EndProject

# Proyecto de Biblioteca de Lógica de Negocio
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "BusinessLogic", "BusinessLogic\BusinessLogic.csproj", "{D1C2B3A4-E5F6-4C7D-8B9E-0F1A2B3C4D5E}"
EndProject

# Proyecto de Pruebas Unitarias (XUnit)
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "TestsProject", "TestsProject\TestsProject.csproj", "{E0F1D2C3-A4B5-4F6G-7H8I-9J0K1L2M3N4O}"
EndProject

Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{B8F3D1C2-D4E5-4A9B-8C7D-0A1B2C3D4E5F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{B8F3D1C2-D4E5-4A9B-8C7D-0A1B2C3D4E5F}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{B8F3D1C2-D4E5-4A9B-8C7D-0A1B2C3D4E5F}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{B8F3D1C2-D4E5-4A9B-8C7D-0A1B2C3D4E5F}.Release|Any CPU.Build.0 = Release|Any CPU

		{C9A2E0B1-F3D4-4E8A-9B7C-1D2E3F4A5B6C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{C9A2E0B1-F3D4-4E8A-9B7C-1D2E3F4A5B6C}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{C9A2E0B1-F3D4-4E8A-9B7C-1D2E3F4A5B6C}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{C9A2E0B1-F3D4-4E8A-9B7C-1D2E3F4A5B6C}.Release|Any CPU.Build.0 = Release|Any CPU

		{D1C2B3A4-E5F6-4C7D-8B9E-0F1A2B3C4D5E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{D1C2B3A4-E5F6-4C7D-8B9E-0F1A2B3C4D5E}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{D1C2B3A4-E5F6-4C7D-8B9E-0F1A2B3C4D5E}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{D1C2B3A4-E5F6-4C7D-8B9E-0F1A2B3C4D5E}.Release|Any CPU.Build.0 = Release|Any CPU

		{E0F1D2C3-A4B5-4F6G-7H8I-9J0K1L2M3N4O}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{E0F1D2C3-A4B5-4F6G-7H8I-9J0K1L2M3N4O}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{E0F1D2C3-A4B5-4F6G-7H8I-9J0K1L2M3N4O}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{E0F1D2C3-A4B5-4F6G-7H8I-9J0K1L2M3N4O}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {F9E8D7C6-B5A4-3B2C-1D0E-F1A2B3C4D5E6}
	EndGlobalSection
EndGlobal
</sln>

<xaml>
<Window x:Class="DesktopApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="Aio Desktop App" Height="350" Width="500">
    <Grid>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="¡Hola desde la App de Escritorio Aio (XAML)!" FontSize="24" Margin="10" />
            <Button Content="Actualizar Mensaje" Width="200" Height="40" Margin="10" Click="Button_Click" />
            <TextBlock x:Name="statusTextBlock" Text="Estado: Listo" FontSize="16" Margin="10" FontWeight="Bold" />
        </StackPanel>
    </Grid>
</Window>
</xaml>

<config>
<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <appSettings>
        <add key="ApiBaseUrl" value="http://localhost:5000/api/" />
        <add key="Environment" value="Development" />
    </appSettings>
</configuration>
</config>

<csproj>
<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>ApiProject</RootNamespace>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\BusinessLogic\BusinessLogic.csproj" />
  </ItemGroup>
</Project>

<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows</TargetFramework>
    <UseWPF>true</UseWPF>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>DesktopApp</RootNamespace>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\BusinessLogic\BusinessLogic.csproj" />
  </ItemGroup>
</Project>

<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>BusinessLogic</RootNamespace>
  </PropertyGroup>
  <ItemGroup>
  </ItemGroup>
</Project>

<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
    <RootNamespace>TestsProject</RootNamespace>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />
    <PackageReference Include="xunit" Version="2.5.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.5.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="6.0.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\BusinessLogic\BusinessLogic.csproj" />
  </ItemGroup>
</Project>
</csproj>
